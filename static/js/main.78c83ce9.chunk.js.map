{"version":3,"sources":["reducers/index.js","reducers/usernameReducer.js","actions/types.js","reducers/userInfoReducer.js","reducers/userReposReducer.js","history.js","api/github.js","actions/index.js","components/UserInput.js","components/Back.js","components/UserInfo.js","components/UserRepo.js","components/Timeline.js","components/App.js","index.js"],"names":["combineReducers","username","state","action","type","payload","userInfo","userRepos","reverse","createBrowserHistory","axios","create","baseURL","headers","Accept","updateUsername","connect","getUserInfo","dispatch","getState","a","github","get","response","data","history","push","process","inputContainer","document","querySelector","classList","add","setTimeout","remove","getUserRepos","console","log","handleGetUser","className","placeholder","onChange","e","target","value","onKeyDown","key","onClick","to","UserInfo","src","avatar_url","alt","login","name","Date","created_at","toLocaleDateString","public_repos","href","html_url","UserRepo","repo","Number","size","useState","loading","setLoading","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","querySelectorAll","observe","map","id","App","basename","exact","path","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.78c83ce9.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport usernameReducer from './usernameReducer'\nimport userInfoReducer from './userInfoReducer'\nimport userReposReducer from './userReposReducer'\n\nexport default combineReducers({\n   username: usernameReducer,\n   userInfo: userInfoReducer,\n   userRepos: userReposReducer,\n})\n","import { UPDATE_USERNAME } from '../actions/types'\n\nexport default (state = '', action) => {\n   switch (action.type) {\n      case UPDATE_USERNAME:\n         return (state = action.payload)\n      default:\n         return state\n   }\n}\n","export const UPDATE_USERNAME = 'UPDATE_USERNAME'\n\nexport const GET_USERINFO = 'GET_USERINFO'\nexport const GET_USERREPOS = 'GET_USERREPOS'","import { GET_USERINFO } from '../actions/types'\n\nexport default (state = {}, action) => {\n   switch (action.type) {\n      case GET_USERINFO:\n         return action.payload\n      default:\n         return state\n   }\n}\n","import { GET_USERREPOS } from '../actions/types'\n\nexport default (state = {}, action) => {\n   switch (action.type) {\n      case GET_USERREPOS:\n         return action.payload.reverse()\n      default:\n         return state\n   }\n}\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","import axios from 'axios'\n\nexport default axios.create({\n   baseURL: 'https://api.github.com/',\n   headers: {\n      Accept: 'application/vnd.github.v3+json',\n   },\n})\n","import github from '../api/github'\nimport history from '../history'\nimport { UPDATE_USERNAME, GET_USERINFO, GET_USERREPOS } from './types'\n\nexport const updateUsername = (payload) => {\n   return {\n      type: UPDATE_USERNAME,\n      payload,\n   }\n}\n\nexport const getUserInfo = () => async (dispatch, getState) => {\n   const { username } = getState()\n   try {\n      const response = await github.get(`users/${username}`)\n\n      dispatch({\n         type: GET_USERINFO,\n         payload: response.data,\n      })\n      history.push(`${process.env.PUBLIC_URL}/${username}`)\n   } catch (error) {\n      const inputContainer = document.querySelector('.popup')\n      inputContainer.classList.add('active')\n\n      setTimeout(() => {\n         inputContainer.classList.remove('active')\n      }, 5000)\n   }\n}\n\nexport const getUserRepos = () => async (dispatch, getState) => {\n   const { username } = getState()\n   try {\n      const response = await github.get(`users/${username}/repos?sort=created`)\n\n      dispatch({\n         type: GET_USERREPOS,\n         payload: response.data,\n      })\n   } catch (error) {\n      console.log(error)\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateUsername, getUserInfo, getUserRepos } from '../actions'\n\nconst UserInput = ({ updateUsername, username, getUserInfo, getUserRepos }) => {\n   const handleUpdateUsername = (e) => {\n      updateUsername(e.target.value)\n   }\n\n   const handleKeyDown = (e) => {\n      if (e.key === 'Enter') {\n         handleGetUser()\n      }\n   }\n\n   const handleGetUser = () => {\n      getUserRepos()\n      getUserInfo()\n   }\n\n   return (\n      <div className='ui-container'>\n         <div className='ui segment teal raised ui-segment'>\n            <div className='ui labeled input'>\n               <div className='ui label'>https://github.com/</div>\n               <input\n                  type='text'\n                  placeholder='username'\n                  onChange={handleUpdateUsername}\n                  value={username}\n                  onKeyDown={handleKeyDown}\n               />\n               <div className='popup'>Unable to find user</div>\n            </div>\n            <button className='ui teal button' onClick={handleGetUser}>\n               Generate timeline\n            </button>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = (state) => {\n   return { username: state.username }\n}\n\nexport default connect(mapStateToProps, { updateUsername, getUserInfo, getUserRepos })(UserInput)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateUsername } from '../actions'\nimport { Link } from 'react-router-dom'\n\nconst Back = ({ updateUsername }) => {\n   const handleBack = () => {\n      updateUsername('')\n   }\n\n   return (\n      <Link to={process.env.PUBLIC_URL + '/'} className='return-home' onClick={handleBack}>\n         <button className='ui circular teal icon button'>\n            <i className='arrow left icon'></i>\n         </button>\n      </Link>\n   )\n}\n\nexport default connect(null, { updateUsername })(Back)\n","import React from 'react'\n\nconst UserInfo = ({ userInfo }) => {\n   const returnDateString = () => {\n      const dateParse = new Date(userInfo.created_at)\n      const dateString = dateParse.toLocaleDateString()\n      return dateString\n   }\n\n   return (\n      <div className='timeline-item ui raised segment'>\n         <div className='userinfo-container'>\n            <div className='ui tiny circular image'>\n               <img src={userInfo.avatar_url} alt='User avatar' />\n            </div>\n            <div className='userinfo-content'>\n               <div className='content-name'>{`User: ${userInfo.login}`}</div>\n               <div className='content-info'>{`Name: ${userInfo.name}`}</div>\n               <div className='content-info'>{`Created on: ${returnDateString()}`}</div>\n               <div className='content-info'>{`Public repos: ${userInfo.public_repos}`}</div>\n               <a href={userInfo.html_url} className='content-link'>\n                  <i className='teal external square alternate link icon'></i>\n               </a>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default UserInfo\n","import React from 'react'\n\nconst UserRepo = ({ repo }) => {\n   const returnDateString = () => {\n      const dateParse = new Date(repo.created_at)\n      const dateString = dateParse.toLocaleDateString()\n      return dateString\n   }\n\n   const returnRepoSize = () => {\n      if (Number(repo.size) < 1000) {\n         return `${repo.size} kB`\n      } else {\n         return `${Number(repo.size) / 1000} MB`\n      }\n   }\n\n   return (\n      <div className='timeline-item ui raised segment'>\n         <div className='userrepo-container'>\n            <div className='content-name'>{`Repository: ${repo.name}`}</div>\n            <div className='content-info'>{`Created on: ${returnDateString()}`}</div>\n            <div className='content-info'>{`Size: ${returnRepoSize()}`}</div>\n            <a href={repo.html_url} className='content-link'>\n               <i className='teal external square alternate link icon'></i>\n            </a>\n         </div>\n      </div>\n   )\n}\n\nexport default UserRepo\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport Back from './Back'\nimport UserInfo from './UserInfo'\nimport UserRepo from './UserRepo'\n\nconst Timeline = ({ userInfo, userRepos }) => {\n   const [loading, setLoading] = useState(true)\n\n   useEffect(() => {\n      setTimeout(() => {\n         setLoading(false)\n\n         const observer = new IntersectionObserver(\n            (entries) => {\n               entries.forEach((entry) => {\n                  if (entry.isIntersecting === true) {\n                     entry.target.classList.add('show-on-scroll')\n                  }\n               })\n            },\n            [1]\n         )\n\n         const targets = document.querySelectorAll('.timeline-item')\n         targets.forEach((target) => {\n            observer.observe(target)\n         })\n      }, 1000)\n   }, [])\n\n   const renderContent = () => {\n      if (loading) {\n         return (\n            <div className='ui active inverted dimmer'>\n               <div className='ui loader'></div>\n            </div>\n         )\n      } else {\n         return (\n            <>\n               <Back />\n               <div className='timeline-container'>\n                  <UserInfo userInfo={userInfo} />\n                  {userRepos.map((repo) => (\n                     <UserRepo repo={repo} key={repo.id} />\n                  ))}\n               </div>\n            </>\n         )\n      }\n   }\n\n   return renderContent()\n}\n\nconst mapStateToProps = (state) => {\n   return { userInfo: state.userInfo, userRepos: state.userRepos }\n}\n\nexport default connect(mapStateToProps)(Timeline)\n","import React from 'react'\n\nimport { Router, Switch, Route } from 'react-router-dom'\nimport history from '../history'\n\nimport UserInput from './UserInput'\nimport Timeline from './Timeline'\n\nconst App = () => {\n   return (\n      <div className='ui container app-container'>\n         <Router history={history} basename={'/github_repo_timeline'}>\n            <Switch>\n               <Route exact path={process.env.PUBLIC_URL + '/'}>\n                  <UserInput />\n               </Route>\n               <Route path={process.env.PUBLIC_URL + '/:username'}>\n                  <Timeline />\n               </Route>\n            </Switch>\n         </Router>\n      </div>\n   )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\n\nimport './sass/style.scss'\n\nconst store = createStore(reducers, applyMiddleware(reduxThunk))\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.querySelector('#root')\n)\n"],"sourceRoot":""}